{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\react\\\\src\\\\context\\\\AppState.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport AppContext from './AppContext';\nimport { dataProductos } from '../api/Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppState = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [articulos, guardarArticulo] = useState([]);\n  const [carrito, guardarCarrito] = useState([]);\n  useEffect(() => {\n    guardarArticulo(dataProductos); // eslint-disable-next-line\n  }, []); ///agregando al carrito\n\n  const agregarAlCarro = producto => {\n    // 1- Verificar si el producto clickeado ya està en el carrito\n    if (carrito.find(x => x.id === producto.id)) {\n      // 2- En caso de ya estar en el carrito, aumentamos la cantidad en 1\n      const carritoCopia = carrito.map(x => x.id === producto.id ? { ...x,\n        cantidad: x.cantidad + 1\n      } : x);\n      guardarCarrito(carritoCopia);\n      return;\n    }\n\n    guardarCarrito([...carrito, { ...producto,\n      cantidad: 1\n    }]);\n  }; ///eliminar compra\n\n\n  const eliminarProducto = producto => {\n    const nuevaLista = carrito.filter(item => item.id !== producto.id);\n    guardarCarrito(nuevaLista);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      articulos: articulos,\n      carrito: carrito,\n      agregarAlCarro,\n      eliminarProducto\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppState, \"mBjEbXfV9YwB84HXJRObuPNd4Fo=\");\n\n_c = AppState;\nexport default AppState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppState\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/react/src/context/AppState.js"],"names":["useState","useEffect","AppContext","dataProductos","AppState","children","articulos","guardarArticulo","carrito","guardarCarrito","agregarAlCarro","producto","find","x","id","carritoCopia","map","cantidad","eliminarProducto","nuevaLista","filter","item"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,aAA9B;;;AAIA,MAAMC,QAAQ,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC7B,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAEQ,OAAF,EAAWC,cAAX,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAK;AACXM,IAAAA,eAAe,CAACJ,aAAD,CAAf,CADW,CAEX;AACH,GAHQ,EAGN,EAHM,CAAT,CAH6B,CAU7B;;AACA,QAAMO,cAAc,GAAIC,QAAD,IAAc;AACjC;AACA,QAAIH,OAAO,CAACI,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,QAAQ,CAACG,EAApC,CAAJ,EAA6C;AAC3C;AACA,YAAMC,YAAY,GAAGP,OAAO,CAACQ,GAAR,CAAYH,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,QAAQ,CAACG,EAAlB,GAAwB,EAAC,GAAGD,CAAJ;AAAOI,QAAAA,QAAQ,EAAEJ,CAAC,CAACI,QAAF,GAAa;AAA9B,OAAxB,GAA4DJ,CAA7E,CAArB;AACAJ,MAAAA,cAAc,CAACM,YAAD,CAAd;AAEA;AACD;;AAEDN,IAAAA,cAAc,CAAC,CAAC,GAAGD,OAAJ,EAAa,EAAC,GAAGG,QAAJ;AAAcM,MAAAA,QAAQ,EAAE;AAAxB,KAAb,CAAD,CAAd;AACD,GAXH,CAX6B,CAwB7B;;;AACA,QAAMC,gBAAgB,GAAGP,QAAQ,IAAI;AACjC,UAAMQ,UAAU,GAAGX,OAAO,CAACY,MAAR,CAAeC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYH,QAAQ,CAACG,EAA5C,CAAnB;AACAL,IAAAA,cAAc,CAACU,UAAD,CAAd;AACH,GAHD;;AAKA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHb,MAAAA,SAAS,EAAEA,SADR;AAEHE,MAAAA,OAAO,EAAEA,OAFN;AAGHE,MAAAA,cAHG;AAIHQ,MAAAA;AAJG,KADX;AAAA,cAQKb;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA1CD;;GAAMD,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport AppContext from './AppContext'\nimport { dataProductos } from '../api/Data'\n\n\n\nconst AppState = ({children}) => {\n    const [articulos, guardarArticulo] = useState([])\n    const [ carrito, guardarCarrito ] = useState([])\n    useEffect(()=> {\n        guardarArticulo(dataProductos)\n        // eslint-disable-next-line\n    }, [])\n    \n    \n    \n    ///agregando al carrito\n    const agregarAlCarro = (producto) => {\n        // 1- Verificar si el producto clickeado ya està en el carrito\n        if (carrito.find(x => x.id === producto.id)) {\n          // 2- En caso de ya estar en el carrito, aumentamos la cantidad en 1\n          const carritoCopia = carrito.map(x => x.id === producto.id ? ({...x, cantidad: x.cantidad + 1}) : x)\n          guardarCarrito(carritoCopia)\n          \n          return\n        }\n    \n        guardarCarrito([...carrito, {...producto, cantidad: 1}])\n      }\n    \n    ///eliminar compra\n    const eliminarProducto = producto => {\n        const nuevaLista = carrito.filter(item => item.id !== producto.id)\n        guardarCarrito(nuevaLista)\n    }\n\n    return (\n        <AppContext.Provider\n            value={{\n                articulos: articulos,\n                carrito: carrito,\n                agregarAlCarro,\n                eliminarProducto\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    )\n}\n\nexport default AppState\n"]},"metadata":{},"sourceType":"module"}